{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aswin\\\\Downloads\\\\Faith\\\\Camp6Assignment\\\\assignmentfrontend\\\\src\\\\employee\\\\pages\\\\Department.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useReducer } from 'react';\nimport './Department.css';\nimport Input from '../../shared/UIElements/Input';\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH, VALIDATOR_EMAIL } from '../../shared/UTIL/Validators';\nimport Button from '../../shared/UIElements/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case \"INPUT_CHANGE\":\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isvalid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isvalid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: {\n            value: action.value,\n            isvalid: action.isvalid\n          }\n        },\n        isvalid: formIsValid\n      };\n    default:\n      return state;\n  }\n};\nconst NewEmployee = () => {\n  _s();\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: {\n      fullname: {\n        value: '',\n        isvalid: false\n      },\n      email: {\n        value: '',\n        isvalid: false\n      }\n    },\n    isvalid: false\n  });\n  const inputHandler = useCallback((id, value, isvalid) => {\n    dispatch({\n      type: \"INPUT_CHANGE\",\n      value: value,\n      isvalid: isvalid,\n      inputId: id\n    });\n  }, []);\n  const placeSumbitHandler = event => {\n    event.preventDefault();\n    console.log(formState.inputs);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"place-form\",\n    onSubmit: placeSumbitHandler,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      id: \"fullname\",\n      element: \"input\",\n      type: \"text\",\n      label: \"FULL NAME\",\n      validators: [VALIDATOR_REQUIRE(), VALIDATOR_MINLENGTH(4)] // to make sure value is not empty \n      ,\n      errorText: \"Please Enter Valid Name With Atleast 4 Characters\",\n      onInput: inputHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      id: \"email\",\n      element: \"input\",\n      type: \"text\",\n      label: \"EMAIL\",\n      validators: [VALIDATOR_REQUIRE(), VALIDATOR_EMAIL()],\n      errorText: \"Please Enter Valid Email Address\",\n      onInput: inputHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      id: \"position\",\n      element: \"input\",\n      type: \"text\",\n      label: \"POSITION\",\n      validators: [VALIDATOR_REQUIRE(), VALIDATOR_MINLENGTH(5)] // to make sure value is not empty \n      ,\n      errorText: \"Please Enter Employee's Position\",\n      onInput: inputHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      id: \"department\",\n      element: \"input\",\n      type: \"text\",\n      label: \"DEPARTMENT\",\n      validators: [VALIDATOR_REQUIRE(), VALIDATOR_MINLENGTH(5)] // to make sure value is not empty \n      ,\n      errorText: \"Please Enter Employee's Department\",\n      onInput: inputHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      id: \"dateOfBirth\",\n      element: \"input\",\n      type: \"date\",\n      label: \"DATE OF BIRTH\",\n      validators: [VALIDATOR_REQUIRE()] // to make sure value is not empty \n      ,\n      errorText: \"Please Enter Employee's Date Of Birth\",\n      onInput: inputHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      id: \"department\",\n      element: \"input\",\n      type: \"text\",\n      label: \"DEPARTMENT\",\n      validators: [VALIDATOR_REQUIRE()] // to make sure value is not empty \n      ,\n      errorText: \"Please Enter Employee's Department\",\n      onInput: inputHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      id: \"department\",\n      element: \"input\",\n      type: \"text\",\n      label: \"DEPARTMENT\",\n      validators: [VALIDATOR_REQUIRE()] // to make sure value is not empty \n      ,\n      errorText: \"Please Enter Employee's Department\",\n      onInput: inputHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      disabled: !formState.isvalid,\n      children: \"ADD EMPLOYEE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), \"  dateOfJoining  salary\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n_s(NewEmployee, \"W7tqICeJY8dv0vybkMUWl2R3Qyk=\");\n_c = NewEmployee;\nexport default NewEmployee;\nvar _c;\n$RefreshReg$(_c, \"NewEmployee\");","map":{"version":3,"names":["React","useCallback","useReducer","Input","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","VALIDATOR_EMAIL","Button","jsxDEV","_jsxDEV","formReducer","state","action","type","formIsValid","inputId","inputs","isvalid","value","NewEmployee","_s","formState","dispatch","fullname","email","inputHandler","id","placeSumbitHandler","event","preventDefault","console","log","className","onSubmit","children","element","label","validators","errorText","onInput","fileName","_jsxFileName","lineNumber","columnNumber","disabled","_c","$RefreshReg$"],"sources":["C:/Users/aswin/Downloads/Faith/Camp6Assignment/assignmentfrontend/src/employee/pages/Department.js"],"sourcesContent":["import React, { useCallback, useReducer } from 'react';\r\nimport './Department.css'\r\nimport Input from '../../shared/UIElements/Input';\r\nimport { VALIDATOR_REQUIRE,VALIDATOR_MINLENGTH,VALIDATOR_EMAIL } from '../../shared/UTIL/Validators';\r\nimport Button from '../../shared/UIElements/Button';\r\n\r\nconst formReducer =(state,action)=>{\r\n    switch(action.type){\r\n        case \"INPUT_CHANGE\":\r\n            let formIsValid = true;\r\n            for (const inputId in state.inputs){\r\n                if(inputId === action.inputId){\r\n                    formIsValid = formIsValid && action.isvalid\r\n                }\r\n                else{\r\n                    formIsValid = formIsValid && state.inputs[inputId].isvalid\r\n                }\r\n            }\r\n            return{\r\n                ...state,\r\n\r\n                inputs:{\r\n                    ...state.inputs,\r\n                    [action.inputId] : {value:action.value,isvalid:action.isvalid}\r\n                },\r\n                isvalid:formIsValid\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst NewEmployee = () => {\r\n\r\n    const[formState,dispatch]=useReducer(formReducer,{\r\n        inputs:{  \r\n            fullname:{\r\n                value: '',\r\n                isvalid:false\r\n            },\r\n            email:{\r\n                value:'',\r\n                isvalid:false\r\n            }\r\n        },\r\n        isvalid:false\r\n    \r\n    })\r\n\r\n    const inputHandler =useCallback((id,value,isvalid)=>{\r\n        dispatch({type:\"INPUT_CHANGE\",\r\n            value:value, isvalid:isvalid,inputId:id});\r\n    },[])\r\n\r\n\r\n    const placeSumbitHandler = (event) =>{\r\n        event.preventDefault();\r\n        console.log(formState.inputs)\r\n    }\r\n\r\n    return(\r\n        <form className='place-form' onSubmit={placeSumbitHandler}>\r\n            {/* normal input tag for code reusability */}\r\n            <Input id=\"fullname\" element=\"input\" type='text' label=\"FULL NAME\" validators={[VALIDATOR_REQUIRE(),VALIDATOR_MINLENGTH(4)]} // to make sure value is not empty \r\n            errorText=\"Please Enter Valid Name With Atleast 4 Characters\" onInput ={inputHandler}></Input>\r\n\r\n            <Input id=\"email\"  element=\"input\" type='text' label=\"EMAIL\" validators={[VALIDATOR_REQUIRE(),VALIDATOR_EMAIL()]} \r\n            errorText=\"Please Enter Valid Email Address\" onInput ={inputHandler} ></Input>\r\n\r\n            <Input id=\"position\" element=\"input\" type='text' label=\"POSITION\" validators={[VALIDATOR_REQUIRE(),VALIDATOR_MINLENGTH(5)]} // to make sure value is not empty \r\n            errorText=\"Please Enter Employee's Position\" onInput ={inputHandler}></Input>\r\n\r\n            <Input id=\"department\" element=\"input\" type='text' label=\"DEPARTMENT\" validators={[VALIDATOR_REQUIRE(),VALIDATOR_MINLENGTH(5)]} // to make sure value is not empty \r\n            errorText=\"Please Enter Employee's Department\" onInput ={inputHandler}></Input>\r\n\r\n            <Input id=\"dateOfBirth\" element=\"input\" type='date' label=\"DATE OF BIRTH\" validators={[VALIDATOR_REQUIRE()]} // to make sure value is not empty \r\n            errorText=\"Please Enter Employee's Date Of Birth\" onInput ={inputHandler}></Input>\r\n\r\n<Input id=\"department\" element=\"input\" type='text' label=\"DEPARTMENT\" validators={[VALIDATOR_REQUIRE()]} // to make sure value is not empty \r\n            errorText=\"Please Enter Employee's Department\" onInput ={inputHandler}></Input>\r\n\r\n<Input id=\"department\" element=\"input\" type='text' label=\"DEPARTMENT\" validators={[VALIDATOR_REQUIRE()]} // to make sure value is not empty \r\n            errorText=\"Please Enter Employee's Department\" onInput ={inputHandler}></Input>\r\n\r\n            <Button type=\"submit\" disabled={!formState.isvalid}>ADD EMPLOYEE</Button>  dateOfJoining  salary\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default NewEmployee;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,UAAU,QAAQ,OAAO;AACtD,OAAO,kBAAkB;AACzB,OAAOC,KAAK,MAAM,+BAA+B;AACjD,SAASC,iBAAiB,EAACC,mBAAmB,EAACC,eAAe,QAAQ,8BAA8B;AACpG,OAAOC,MAAM,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,WAAW,GAAEA,CAACC,KAAK,EAACC,MAAM,KAAG;EAC/B,QAAOA,MAAM,CAACC,IAAI;IACd,KAAK,cAAc;MACf,IAAIC,WAAW,GAAG,IAAI;MACtB,KAAK,MAAMC,OAAO,IAAIJ,KAAK,CAACK,MAAM,EAAC;QAC/B,IAAGD,OAAO,KAAKH,MAAM,CAACG,OAAO,EAAC;UAC1BD,WAAW,GAAGA,WAAW,IAAIF,MAAM,CAACK,OAAO;QAC/C,CAAC,MACG;UACAH,WAAW,GAAGA,WAAW,IAAIH,KAAK,CAACK,MAAM,CAACD,OAAO,CAAC,CAACE,OAAO;QAC9D;MACJ;MACA,OAAM;QACF,GAAGN,KAAK;QAERK,MAAM,EAAC;UACH,GAAGL,KAAK,CAACK,MAAM;UACf,CAACJ,MAAM,CAACG,OAAO,GAAI;YAACG,KAAK,EAACN,MAAM,CAACM,KAAK;YAACD,OAAO,EAACL,MAAM,CAACK;UAAO;QACjE,CAAC;QACDA,OAAO,EAACH;MACZ,CAAC;IACL;MACI,OAAOH,KAAK;EACpB;AACJ,CAAC;AAED,MAAMQ,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEtB,MAAK,CAACC,SAAS,EAACC,QAAQ,CAAC,GAACpB,UAAU,CAACQ,WAAW,EAAC;IAC7CM,MAAM,EAAC;MACHO,QAAQ,EAAC;QACLL,KAAK,EAAE,EAAE;QACTD,OAAO,EAAC;MACZ,CAAC;MACDO,KAAK,EAAC;QACFN,KAAK,EAAC,EAAE;QACRD,OAAO,EAAC;MACZ;IACJ,CAAC;IACDA,OAAO,EAAC;EAEZ,CAAC,CAAC;EAEF,MAAMQ,YAAY,GAAExB,WAAW,CAAC,CAACyB,EAAE,EAACR,KAAK,EAACD,OAAO,KAAG;IAChDK,QAAQ,CAAC;MAACT,IAAI,EAAC,cAAc;MACzBK,KAAK,EAACA,KAAK;MAAED,OAAO,EAACA,OAAO;MAACF,OAAO,EAACW;IAAE,CAAC,CAAC;EACjD,CAAC,EAAC,EAAE,CAAC;EAGL,MAAMC,kBAAkB,GAAIC,KAAK,IAAI;IACjCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtBC,OAAO,CAACC,GAAG,CAACV,SAAS,CAACL,MAAM,CAAC;EACjC,CAAC;EAED,oBACIP,OAAA;IAAMuB,SAAS,EAAC,YAAY;IAACC,QAAQ,EAAEN,kBAAmB;IAAAO,QAAA,gBAEtDzB,OAAA,CAACN,KAAK;MAACuB,EAAE,EAAC,UAAU;MAACS,OAAO,EAAC,OAAO;MAACtB,IAAI,EAAC,MAAM;MAACuB,KAAK,EAAC,WAAW;MAACC,UAAU,EAAE,CAACjC,iBAAiB,CAAC,CAAC,EAACC,mBAAmB,CAAC,CAAC,CAAC,CAAE,CAAC;MAAA;MAC7HiC,SAAS,EAAC,mDAAmD;MAACC,OAAO,EAAGd;IAAa;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAE9FlC,OAAA,CAACN,KAAK;MAACuB,EAAE,EAAC,OAAO;MAAES,OAAO,EAAC,OAAO;MAACtB,IAAI,EAAC,MAAM;MAACuB,KAAK,EAAC,OAAO;MAACC,UAAU,EAAE,CAACjC,iBAAiB,CAAC,CAAC,EAACE,eAAe,CAAC,CAAC,CAAE;MACjHgC,SAAS,EAAC,kCAAkC;MAACC,OAAO,EAAGd;IAAa;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,eAE9ElC,OAAA,CAACN,KAAK;MAACuB,EAAE,EAAC,UAAU;MAACS,OAAO,EAAC,OAAO;MAACtB,IAAI,EAAC,MAAM;MAACuB,KAAK,EAAC,UAAU;MAACC,UAAU,EAAE,CAACjC,iBAAiB,CAAC,CAAC,EAACC,mBAAmB,CAAC,CAAC,CAAC,CAAE,CAAC;MAAA;MAC5HiC,SAAS,EAAC,kCAAkC;MAACC,OAAO,EAAGd;IAAa;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAE7ElC,OAAA,CAACN,KAAK;MAACuB,EAAE,EAAC,YAAY;MAACS,OAAO,EAAC,OAAO;MAACtB,IAAI,EAAC,MAAM;MAACuB,KAAK,EAAC,YAAY;MAACC,UAAU,EAAE,CAACjC,iBAAiB,CAAC,CAAC,EAACC,mBAAmB,CAAC,CAAC,CAAC,CAAE,CAAC;MAAA;MAChIiC,SAAS,EAAC,oCAAoC;MAACC,OAAO,EAAGd;IAAa;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAE/ElC,OAAA,CAACN,KAAK;MAACuB,EAAE,EAAC,aAAa;MAACS,OAAO,EAAC,OAAO;MAACtB,IAAI,EAAC,MAAM;MAACuB,KAAK,EAAC,eAAe;MAACC,UAAU,EAAE,CAACjC,iBAAiB,CAAC,CAAC,CAAE,CAAC;MAAA;MAC7GkC,SAAS,EAAC,uCAAuC;MAACC,OAAO,EAAGd;IAAa;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAE9FlC,OAAA,CAACN,KAAK;MAACuB,EAAE,EAAC,YAAY;MAACS,OAAO,EAAC,OAAO;MAACtB,IAAI,EAAC,MAAM;MAACuB,KAAK,EAAC,YAAY;MAACC,UAAU,EAAE,CAACjC,iBAAiB,CAAC,CAAC,CAAE,CAAC;MAAA;MAC7FkC,SAAS,EAAC,oCAAoC;MAACC,OAAO,EAAGd;IAAa;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAE3FlC,OAAA,CAACN,KAAK;MAACuB,EAAE,EAAC,YAAY;MAACS,OAAO,EAAC,OAAO;MAACtB,IAAI,EAAC,MAAM;MAACuB,KAAK,EAAC,YAAY;MAACC,UAAU,EAAE,CAACjC,iBAAiB,CAAC,CAAC,CAAE,CAAC;MAAA;MAC7FkC,SAAS,EAAC,oCAAoC;MAACC,OAAO,EAAGd;IAAa;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAE/ElC,OAAA,CAACF,MAAM;MAACM,IAAI,EAAC,QAAQ;MAAC+B,QAAQ,EAAE,CAACvB,SAAS,CAACJ,OAAQ;MAAAiB,QAAA,EAAC;IAAY;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,2BAE7E;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAEf,CAAC;AAAAvB,EAAA,CAxDKD,WAAW;AAAA0B,EAAA,GAAX1B,WAAW;AA0DjB,eAAeA,WAAW;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}